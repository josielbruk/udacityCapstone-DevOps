version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  # install-requirements:
  #   docker:
  #     - image: python:3.7-alpine3.11
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install requirements
  #         command: |
  #           apk add --no-cache python3 py3-pip
  #           apk add --update ansible curl
  #           python3 -m pip install awscli
  #           curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
  #           chmod +x ./kubectl
  #           mv ./kubectl /usr/local/bin/kubectl
  #           pip install pylint

  lint-Blue-Environment:
    docker:
      - image: hadolint/hadolint:latest-debian
    steps:
      - checkout
      - run:
          name: Lint Blue Environment
          command: |
            hadolint ./BlueEnvironment/Dockerfile | tee -a docker_lint_blue.txt
            checkLintBlue=`stat --printf="%s"  docker_lint_blue.txt`
                    
            if [ "$checkLintBlue" -gexit "0" ]
            then
                echo "Error"
                exit 1
            else
                echo "Blue Environment Successful"
            fi
            hadolint ./BlueEnvironment/Dockerfile

  # lint-Green-Environment:
  #   docker:
  #     - image: hadolint/hadolint:latest-debian
  #   steps:
  #     - checkout
  #     - run:
  #         name: Lint Green Environment
  #         command: |
  #           hadolint ./GreenEnvironment/Dockerfile | tee -a docker_lint_green.txt
  #           checkLintGreen=`stat --printf="%s"  docker_lint_green.txt`
                    
  #           if [ "$checkLintGreen" -gexit "0" ]
  #           then
  #               echo "Error"
  #               exit 1
  #           else
  #               echo "Green Environment Successful"
  #           fi
  #           hadolint ./GreenEnvironment/Dockerfile

      
  build-Blue-Environment-Image:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build Blue Environment
          command: |
            pwd
            ls 
            cd BlueEnvironment
            chmod +x ./run_docker.sh
            ./run_docker.sh
      - persist_to_workspace:
          root: .
          paths:
            - BlueEnvironment/Dockerimage.tar

  upload-docker-Blue-Image:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker
      - run:
          name: Load Docker image
          command: |
            pwd
            ls
            docker load -i /tmp/workspace/BlueEnvironment/Dockerimage.tar
      - run:
          name: Upload Docker Blue Image to hub
          command: |
            # cd ..
            pwd
            ls
            cd BlueEnvironment
            chmod +x ./upload_docker.sh
            ./upload_docker.sh

  configure-Blue-AWS-kubernetes-Environment:
    executor: aws-eks/python3
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: Kubernetes-devops-capstone
      # - kubernetes/create-or-update-resource:          
      #     resource-file-path: BlueDeployment/blueDeployment.yml
      #     resource-name: deployment/devops-capstone-blue
      # - kubernetes/create-or-update-resource:
      #     resource-file-path: BlueDeployment/service.yml
      #     resource-name: service/devops-capstone-blue 
      # - run:
      #     name: install AWS cli
      #     command: |
      #       pip3 install awscli
      - run:
          # name: Create Blue AWS Kubernetes Environment
          command: |
            aws eks --region eu-west-2 update-kubeconfig \
            --name Kubernetes-devops-capstone --role-arn arn:aws:iam::447576253070:role/eksClusterRole
            
            kubectl config use-context arn:aws:eks:eu-west-2:447576253070:cluster/Kubernetes-devops-capstone
            kubectl apply -f ./BlueDeployment/blueDeployment.yml
            kubectl apply -f ./BlueDeployment/service.yml
            kubectl get nodes
            kubectl get deployment
            kubectl get pod -o wide
            kubectl get services
 

      # - run:
      #     name: Deploy Blue Environment
      #     command: |
      #       kubectl config use-context arn:aws:eks:eu-west-2:447576253070:cluster/Kubernetes-devops-capstone
      #       kubectl apply -f ./BlueDeployment/deployBlue.yml
      #       kubectl apply -f ./BlueDeployment/service.yml
      #       kubectl get nodes
      #       kubectl get deployment
      #       kubectl get pod -o wide
      #       kubectl get services



workflows:
  default:
    jobs:
      # - install-requirements
      - lint-Blue-Environment
          # requires: [install-requirements]
      #- lint-Green-Environment
      - build-Blue-Environment-Image:
          requires: [lint-Blue-Environment]
      - upload-docker-Blue-Image:
          requires: [build-Blue-Environment-Image]
      - configure-Blue-AWS-kubernetes-Environment:
          requires: [upload-docker-Blue-Image]
      - aws-eks/update-container-image:
          cluster-name: Kubernetes-devops-capstone
          container-image-updates: "devops-capstone-blue=josielbr/devops-capstone-blue"
          resource-name: deployment/devops-capstone-blue
          record: true
          requires: [configure-Blue-AWS-kubernetes-Environment] 
     

